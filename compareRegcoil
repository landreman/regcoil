#!/usr/bin/env python3

import sys
import os
import numpy as np
from scipy.io import netcdf_file
import matplotlib
import matplotlib.pyplot as plt

myname = os.path.basename(__file__)
print("This is " + myname)
print("Usage:")
print("  " + myname + " <List of 1 or more regcoil_out.XXX.nc files>")
print() 

if len(sys.argv) < 2:
    print("Error! You must list at least one regcoil_out.XXX.nc file as a command-line argument.")
    exit(1)

lambda_many = []
chi2_B_many = []
chi2_K_many = []
chi2_Laplace_Beltrami_many = []
max_B_many = []
max_K_many = []
max_lambda = 0

for whichFile in range(1,len(sys.argv)):
    filename = sys.argv[whichFile]
    f = netcdf_file(filename,'r',mmap=False)
    # lambda used to be called alpha, so try both names for backward-compatibility.
    # Also, we used 'lambdas' instead of 'lambda' to avoid conflict with python's keyword lambda.
    try:
        lambdas = f.variables['lambda'][()]
    except:
        lambdas = f.variables['alpha'][()]
    permutation = np.argsort(lambdas)
    lambdas = lambdas[permutation]
    if lambdas[-1]>1.0e199:
        lambdas[-1] = np.inf

    lambda_many.append(lambdas)
    max_lambda = np.max((max_lambda,np.max(lambdas)))
    print("max_lambda:",max_lambda)

    chi2_B_many.append(f.variables['chi2_B'][()][permutation])
    max_B_many.append(f.variables['max_Bnormal'][()][permutation])

    # K used to be called J, so try both names for backward-compatibility:
    try:
        chi2_K_many.append(f.variables['chi2_K'][()][permutation])
        max_K_many.append(f.variables['max_K'][()][permutation])
    except:
        chi2_K_many.append(f.variables['chi2_J'][()][permutation])
        max_K_many.append(f.variables['max_J'][()][permutation])

    try:
        chi2_Laplace_Beltrami_many.append(f.variables['chi2_Laplace_Beltrami'][()][permutation])
    except:
        chi2_Laplace_Beltrami_many.append([])

    f.close()

    print("Read data from file "+filename)



##########################################################
# Make plots
##########################################################

for whichFigure in range(3):
    if whichFigure==0:
        data_K = chi2_K_many
        label_K = 'chi2_K'
        data_B = chi2_B_many
        label_B = 'chi2_B'
    elif whichFigure==1:
        data_K = chi2_Laplace_Beltrami_many
        label_K = 'chi2_Laplace_Beltrami'
        data_B = chi2_B_many
        label_B = 'chi2_B'
    else:
        data_K = max_K_many
        label_K = 'max K'
        data_B = max_B_many
        label_B = 'max B'


    matplotlib.rcParams.update({'font.size': 9})
    fig = plt.figure(figsize=(15, 8))

    numRows=2;
    numCols=3;

    plt.subplot(numRows,numCols,1)
    for whichFile in range(len(sys.argv)-1):
        filename = sys.argv[whichFile+1]
        plt.loglog(data_K[whichFile],data_B[whichFile],'.-',label=filename)
    plt.xlabel(label_K)
    plt.ylabel(label_B)
    #plt.legend(frameon=False,prop=dict(size=8),loc=0)
    plt.grid(True)

    plt.subplot(numRows,numCols,2)
    for whichFile in range(len(sys.argv)-1):
        filename = sys.argv[whichFile+1]
        plt.loglog(lambda_many[whichFile],data_B[whichFile],'.-',label=filename)
    plt.xlabel('lambda [T^2 m^2 / A^2]')
    plt.ylabel(label_B)
    #plt.legend(frameon=False,prop=dict(size=8),loc=0)
    plt.grid(True)

    plt.subplot(numRows,numCols,3)
    for whichFile in range(len(sys.argv)-1):
        filename = sys.argv[whichFile+1]
        plt.semilogy(lambda_many[whichFile],data_B[whichFile],'.-',label=filename)
    plt.xlabel('lambda [T^2 m^2 / A^2]')
    plt.ylabel(label_B)
    #plt.legend(frameon=False,prop=dict(size=8),loc=0)
    plt.grid(True)
    plt.xlim(-max_lambda*0.05,max_lambda*1.05)

    plt.subplot(numRows,numCols,5)
    for whichFile in range(len(sys.argv)-1):
        filename = sys.argv[whichFile+1]
        plt.loglog(lambda_many[whichFile],data_K[whichFile],'.-',label=filename)
    plt.xlabel('lambda [T^2 m^2 / A^2]')
    plt.ylabel(label_K)
    #plt.legend(frameon=False,prop=dict(size=8),loc=0)
    plt.grid(True)

    plt.subplot(numRows,numCols,6)
    for whichFile in range(len(sys.argv)-1):
        filename = sys.argv[whichFile+1]
        plt.semilogy(lambda_many[whichFile],data_K[whichFile],'.-',label=filename)
    plt.xlabel('lambda [T^2 m^2 / A^2]')
    plt.ylabel(label_K)
    plt.legend(frameon=False,prop=dict(size=8),loc=0)
    plt.grid(True)
    plt.xlim(-max_lambda*0.05,max_lambda*1.05)

    titleString = "Plot generated by "+ os.path.abspath(__file__)
    plt.figtext(0.5, 0.995, titleString, horizontalalignment='center', verticalalignment='top')
    titleString = "Run in " + os.getcwd()
    plt.figtext(0.5, 0.005, titleString, horizontalalignment='center', verticalalignment='bottom')

    #plt.tight_layout()
    plt.subplots_adjust(
        left=0.048,
        bottom=0.082,
        right=0.991,
        top=0.974,
        wspace=0.215,
        hspace=0.196,
    )

plt.show()

